{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haris\\\\OneDrive\\\\Desktop\\\\clinicdoc1\\\\src\\\\components\\\\DoctorsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../App.css';\nimport Doctor from './Doctor.js';\nimport Doct1 from '../images/Doct1.jpeg';\nimport Doct2 from '../images/Doct2.jpg';\nimport Doct3 from '../images/Doctr2.jpg';\nimport Doct4 from '../images/Doct4.jpg';\nimport Slots from './Slots';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet docotrsData = [{\n  id: 1,\n  name: \"Dr Rakesh\",\n  speciality: \"Cardiology\",\n  costOfAppointment: 300,\n  selectedSlot: [],\n  image: Doct3,\n  appointmentsBooked: 0\n}, {\n  id: 2,\n  name: \"Dr Satish\",\n  speciality: \"Diabetician\",\n  costOfAppointment: 500,\n  selectedSlot: [],\n  image: Doct2,\n  appointmentsBooked: 0\n}, {\n  id: 3,\n  name: \"Dr Latha\",\n  speciality: \" ENT\",\n  costOfAppointment: 800,\n  selectedSlot: [],\n  image: Doct1,\n  appointmentsBooked: 0\n}, {\n  id: 4,\n  name: \"Dr Suresh\",\n  speciality: \"opthamlogy\",\n  costOfAppointment: 400,\n  selectedSlot: [],\n  image: Doct4,\n  appointmentsBooked: 0\n}];\n\nconst Doctors = () => {\n  _s();\n\n  const [docotrsInfo, setdocotrsInfo] = useState(docotrsData);\n  const [activeDoct, setactiveDoct] = useState(null);\n\n  let bookAppoinment = id => {\n    let doctInfo = docotrsInfo.filter(e => e.id == id);\n    setactiveDoct(doctInfo);\n  };\n\n  let handleSlotSelect = (slot, doctDetails) => {\n    let dcots = [...docotrsInfo];\n\n    for (let i in dcots) {\n      if (dcots[i]['id'] == doctDetails.id) {\n        if (!dcots[i]['selectedSlot'].includes(slot)) {\n          dcots[i]['selectedSlot'].push(slot);\n          setdocotrsInfo(dcots);\n          alert('Your appointment is booked successfully');\n        }\n      }\n    }\n  };\n\n  let handleBack = () => {\n    setactiveDoct(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"docorsInfo\",\n    children: activeDoct ? /*#__PURE__*/_jsxDEV(Slots, {\n      activeDoct: activeDoct[0],\n      handleSlotSelect: handleSlotSelect,\n      handleBack: handleBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }, this) : docotrsInfo.map(doc => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Doctor, {\n        bookAppoinment: bookAppoinment,\n        doctorDetails: doc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Doctors, \"nlJRg9cCTjgrwddEUYSvivn105A=\");\n\n_c = Doctors;\nexport default Doctors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Doctors\");","map":{"version":3,"names":["React","useState","Doctor","Doct1","Doct2","Doct3","Doct4","Slots","docotrsData","id","name","speciality","costOfAppointment","selectedSlot","image","appointmentsBooked","Doctors","docotrsInfo","setdocotrsInfo","activeDoct","setactiveDoct","bookAppoinment","doctInfo","filter","e","handleSlotSelect","slot","doctDetails","dcots","i","includes","push","alert","handleBack","map","doc"],"sources":["C:/Users/haris/OneDrive/Desktop/clinicdoc1/src/components/DoctorsList.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport '../App.css';\r\nimport Doctor from './Doctor.js'\r\nimport Doct1 from '../images/Doct1.jpeg';\r\nimport Doct2 from '../images/Doct2.jpg';\r\nimport Doct3 from '../images/Doctr2.jpg';\r\nimport Doct4 from '../images/Doct4.jpg';\r\nimport Slots from './Slots';\r\n\r\nlet docotrsData = [\r\n    { id: 1, name: \"Dr Rakesh\",speciality: \"Cardiology\", costOfAppointment: 300, selectedSlot: [], image: Doct3, appointmentsBooked: 0 },\r\n   \r\n    { id: 2, name: \"Dr Satish\",speciality: \"Diabetician\",costOfAppointment: 500, selectedSlot: [], image: Doct2, appointmentsBooked: 0 },\r\n    { id: 3, name: \"Dr Latha\", speciality: \" ENT\", costOfAppointment: 800, selectedSlot: [], image: Doct1, appointmentsBooked: 0 },\r\n   \r\n    { id: 4, name: \"Dr Suresh\",speciality: \"opthamlogy\",costOfAppointment: 400, selectedSlot: [], image: Doct4, appointmentsBooked: 0 },\r\n]\r\n\r\nconst Doctors = () => {\r\n   \r\n    const [docotrsInfo,setdocotrsInfo]=useState(docotrsData)\r\n    const [activeDoct,setactiveDoct]=useState(null)\r\n\r\n    let bookAppoinment=(id)=>{\r\n        let doctInfo=docotrsInfo.filter(e=>e.id==id)\r\n        setactiveDoct(doctInfo)\r\n    }\r\n   \r\n   let handleSlotSelect=(slot,doctDetails)=>{\r\n        let dcots=[...docotrsInfo]\r\n        for(let i in dcots){\r\n            if(dcots[i]['id']==doctDetails.id){\r\n                if(!dcots[i]['selectedSlot'].includes(slot)){\r\n                    dcots[i]['selectedSlot'].push(slot)\r\n                    setdocotrsInfo(dcots)\r\n                    alert('Your appointment is booked successfully')\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n    let handleBack=()=>{\r\n        setactiveDoct(null)\r\n    }\r\n    return (\r\n        <div className='docorsInfo'  >\r\n            {activeDoct?<Slots\r\n            activeDoct={activeDoct[0]}\r\n            handleSlotSelect={handleSlotSelect}\r\n            handleBack={handleBack}\r\n            />:\r\n            docotrsInfo.map((doc) => (\r\n                <>\r\n                <Doctor\r\n                bookAppoinment={bookAppoinment}\r\n                doctorDetails={doc}\r\n                />\r\n                </>\r\n\r\n           \r\n        ))\r\n            \r\n            }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Doctors"],"mappings":"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"},"metadata":{},"sourceType":"module"}